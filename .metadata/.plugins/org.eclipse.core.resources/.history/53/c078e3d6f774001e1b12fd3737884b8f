/**
 * 
 */
package qrmanager.dev;

import java.io.FileNotFoundException;
import java.io.FileReader; 
import java.io.IOException;
import java.util.Iterator; 
import java.util.Map; 
import java.util.Map.Entry;
import java.util.*;

import org.json.simple.JSONArray; 
import org.json.simple.JSONObject; 
import org.json.simple.parser.*; 

/**
 * @author Roberto Fernandez
 *
 */
public class ReadConfig {
	private static final String QRMANAGERS_ELEM = "qrManagers";
	private static final String DIGITAL_OUTPUT_ELEM = "";
	private static final String NAME_ELEM = "name";
	private static final String PORT_NAME_ELEM = "portName";
	private static final String SPEED_ELEM = "speed";
	private static final String DOCHANNEL_ELEM = "doChannel";
	
	public List<QRManagerDTO> getQrManagers(String configFilePath) throws FileNotFoundException, IOException, ParseException {
		// parsing file "JSONExample.json"
		List<QRManagerDTO> myDTO = new ArrayList<QRManagerDTO>();
		
        Object obj = new JSONParser().parse(new FileReader(configFilePath)); 
          
        // type casting obj to JSONObject 
        JSONObject jo = (JSONObject) obj; 
        
        // getting qrManagers element
        JSONArray ja = (JSONArray) jo.get(QRMANAGERS_ELEM); 
          
        // iterating qrManagers
        Iterator itr2 = ja.iterator(); 
          
        while (itr2.hasNext())  
        { 
            Iterator itr1 = ((Map) itr2.next()).entrySet().iterator(); 
            QRManagerDTO dto = new QRManagerDTO();
            while (itr1.hasNext()) { 
                Map.Entry pair = (Entry) itr1.next(); 
                
                if (pair.getKey().toString().equalsIgnoreCase(NAME_ELEM)) {
                	dto.setName(pair.getValue().toString());
                }
                else if (pair.getKey().toString().equalsIgnoreCase(PORT_NAME_ELEM)) {
                    dto.setPortName(pair.getValue().toString());
                }
                else if (pair.getKey().toString().equalsIgnoreCase(SPEED_ELEM)) {
                    dto.setSpeed(Integer.parseInt(pair.getValue().toString()));
                }
                else if (pair.getKey().toString().equalsIgnoreCase(DOCHANNEL_ELEM)) {
                	dto.setDoChannel(Integer.parseInt(pair.getValue().toString()));
                }
            } 
            // Add DTO instance to the list
            myDTO.add(dto);
        }
        
		return myDTO; 
	}
	
	public List<DoOutputDTO> getDigitalOutput(String configFilePath) throws FileNotFoundException, IOException, ParseException {
		// parsing file "JSONExample.json"
		List<DoDTO> myDTO = new ArrayList<DoDTO>();
		
        Object obj = new JSONParser().parse(new FileReader(configFilePath)); 
          
        // type casting obj to JSONObject 
        JSONObject jo = (JSONObject) obj; 
        
        // getting qrManagers element
        JSONArray ja = (JSONArray) jo.get(QRMANAGERS_ELEM); 
          
        // iterating qrManagers
        Iterator itr2 = ja.iterator(); 
          
        while (itr2.hasNext())  
        { 
            Iterator itr1 = ((Map) itr2.next()).entrySet().iterator(); 
            QRManagerDTO dto = new QRManagerDTO();
            while (itr1.hasNext()) { 
                Map.Entry pair = (Entry) itr1.next(); 
                
                if (pair.getKey().toString().equalsIgnoreCase(NAME_ELEM)) {
                	dto.setName(pair.getValue().toString());
                }
                else if (pair.getKey().toString().equalsIgnoreCase(PORT_NAME_ELEM)) {
                    dto.setPortName(pair.getValue().toString());
                }
                else if (pair.getKey().toString().equalsIgnoreCase(SPEED_ELEM)) {
                    dto.setSpeed(Integer.parseInt(pair.getValue().toString()));
                }
                else if (pair.getKey().toString().equalsIgnoreCase(DOCHANNEL_ELEM)) {
                	dto.setDoChannel(Integer.parseInt(pair.getValue().toString()));
                }
            } 
            // Add DTO instance to the list
            myDTO.add(dto);
        }
        
		return myDTO; 
	}	
}
